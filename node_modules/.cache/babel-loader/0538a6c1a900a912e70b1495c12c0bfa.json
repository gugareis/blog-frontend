{"ast":null,"code":"import axios from \"axios\";\nimport { getToken } from \"./auth\";\nconst api = axios.create({\n  baseURL: `${process.env.REACT_APP_USER_URL}`\n});\napi.interceptors.request.use(async config => {\n  if (config.url !== \"/api/authenticate\" && config.url !== \"/api/newaccount\") {\n    const token = getToken();\n\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n  }\n\n  return config;\n});\n\nclass ApiService {\n  constructor(apiurl) {\n    this.apiurl = apiurl;\n  }\n\n  post(url, objeto) {\n    const requestUrl = `${this.apiurl}${url}`;\n    return api.post(requestUrl, objeto);\n  }\n\n  postFormData(url, objeto) {\n    const requestUrl = `${this.apiurl}${url}`;\n    const config = {\n      headers: {\n        'content-type': 'multipart/form-data'\n      }\n    };\n    return api.post(requestUrl, objeto, config);\n  }\n\n  put(url, objeto) {\n    const requestUrl = `${this.apiurl}${url}`;\n    return api.put(requestUrl, objeto);\n  }\n\n  delete(url) {\n    const requestUrl = `${this.apiurl}${url}`;\n    return api.delete(requestUrl);\n  }\n\n  get(url) {\n    const requestUrl = `${this.apiurl}${url}`;\n    return api.get(requestUrl);\n  }\n\n}\n\nexport default ApiService;","map":{"version":3,"sources":["C:/Users/gugar/Documents/git/blog-frontend/src/services/apiservice.js"],"names":["axios","getToken","api","create","baseURL","process","env","REACT_APP_USER_URL","interceptors","request","use","config","url","token","headers","Authorization","ApiService","constructor","apiurl","post","objeto","requestUrl","postFormData","put","delete","get"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,QAAzB;AAEA,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAN,CAAa;AACrBC,EAAAA,OAAO,EAAI,GAAEC,OAAO,CAACC,GAAR,CAAYC,kBAAmB;AADvB,CAAb,CAAZ;AAIAL,GAAG,CAACM,YAAJ,CAAiBC,OAAjB,CAAyBC,GAAzB,CAA6B,MAAMC,MAAN,IAAgB;AAC3C,MAAGA,MAAM,CAACC,GAAP,KAAa,mBAAb,IAAoCD,MAAM,CAACC,GAAP,KAAa,iBAApD,EAAsE;AAClE,UAAMC,KAAK,GAAGZ,QAAQ,EAAtB;;AACA,QAAIY,KAAJ,EAAW;AACTF,MAAAA,MAAM,CAACG,OAAP,CAAeC,aAAf,GAAgC,UAASF,KAAM,EAA/C;AACD;AACJ;;AACD,SAAOF,MAAP;AACD,CARD;;AAWA,MAAMK,UAAN,CAAiB;AACbC,EAAAA,WAAW,CAAEC,MAAF,EAAS;AAChB,SAAKA,MAAL,GAAcA,MAAd;AACH;;AACDC,EAAAA,IAAI,CAACP,GAAD,EAAKQ,MAAL,EAAY;AACZ,UAAMC,UAAU,GAAI,GAAE,KAAKH,MAAO,GAAEN,GAAI,EAAxC;AACA,WAAOV,GAAG,CAACiB,IAAJ,CAASE,UAAT,EAAoBD,MAApB,CAAP;AACH;;AAEDE,EAAAA,YAAY,CAACV,GAAD,EAAKQ,MAAL,EAAY;AACpB,UAAMC,UAAU,GAAI,GAAE,KAAKH,MAAO,GAAEN,GAAI,EAAxC;AACA,UAAMD,MAAM,GAAG;AACXG,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AADE,KAAf;AAKA,WAAOZ,GAAG,CAACiB,IAAJ,CAASE,UAAT,EAAoBD,MAApB,EAA2BT,MAA3B,CAAP;AACH;;AACDY,EAAAA,GAAG,CAACX,GAAD,EAAKQ,MAAL,EAAY;AACX,UAAMC,UAAU,GAAI,GAAE,KAAKH,MAAO,GAAEN,GAAI,EAAxC;AACA,WAAOV,GAAG,CAACqB,GAAJ,CAAQF,UAAR,EAAmBD,MAAnB,CAAP;AACH;;AACDI,EAAAA,MAAM,CAACZ,GAAD,EAAK;AACP,UAAMS,UAAU,GAAI,GAAE,KAAKH,MAAO,GAAEN,GAAI,EAAxC;AACA,WAAOV,GAAG,CAACsB,MAAJ,CAAWH,UAAX,CAAP;AACH;;AACDI,EAAAA,GAAG,CAACb,GAAD,EAAK;AACJ,UAAMS,UAAU,GAAI,GAAE,KAAKH,MAAO,GAAEN,GAAI,EAAxC;AACA,WAAOV,GAAG,CAACuB,GAAJ,CAAQJ,UAAR,CAAP;AACH;;AA7BY;;AA+BjB,eAAeL,UAAf","sourcesContent":["import axios from \"axios\";\r\nimport { getToken } from \"./auth\";\r\n\r\nconst api = axios.create({\r\n    baseURL : `${process.env.REACT_APP_USER_URL}`\r\n});\r\n\r\napi.interceptors.request.use(async config => {\r\n  if(config.url!==\"/api/authenticate\" && config.url!==\"/api/newaccount\"){\r\n      const token = getToken();\r\n      if (token) {\r\n        config.headers.Authorization = `Bearer ${token}`;\r\n      }\r\n  }\r\n  return config;\r\n});\r\n\r\n\r\nclass ApiService {\r\n    constructor (apiurl){\r\n        this.apiurl = apiurl;\r\n    }\r\n    post(url,objeto){\r\n        const requestUrl = `${this.apiurl}${url}`;\r\n        return api.post(requestUrl,objeto,);\r\n    }\r\n    \r\n    postFormData(url,objeto){\r\n        const requestUrl = `${this.apiurl}${url}`;\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'multipart/form-data'\r\n            }\r\n        }\r\n        return api.post(requestUrl,objeto,config);\r\n    }\r\n    put(url,objeto){\r\n        const requestUrl = `${this.apiurl}${url}`;\r\n        return api.put(requestUrl,objeto);\r\n    }\r\n    delete(url){\r\n        const requestUrl = `${this.apiurl}${url}`;\r\n        return api.delete(requestUrl);\r\n    }\r\n    get(url){\r\n        const requestUrl = `${this.apiurl}${url}`;\r\n        return api.get(requestUrl);\r\n    }\r\n}\r\nexport default ApiService"]},"metadata":{},"sourceType":"module"}