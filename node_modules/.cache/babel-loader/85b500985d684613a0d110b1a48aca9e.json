{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\gugar\\\\Documents\\\\git\\\\blog-frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:\\\\Users\\\\gugar\\\\Documents\\\\git\\\\blog-frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\gugar\\\\Documents\\\\git\\\\blog-frontend\\\\src\\\\pages\\\\Albums\\\\index.js\";\nimport React from 'react'; // import '../../styles/global.css'\n\nimport AlbumsService from '../../services/albumService';\nimport { Link, withRouter } from \"react-router-dom\";\nimport AlbumsTables from './albumsTables';\nimport { Button } from 'primereact/button';\nimport { Card } from 'primereact/card';\nimport { FileUpload } from 'primereact/fileupload';\nimport { Messages } from 'primereact/messages';\nimport { Message } from 'primereact/message';\nexport class Albums extends React.Component {\n  constructor() {\n    super();\n\n    this.invoiceUploadHandler = ({\n      files\n    }) => {\n      const _files = _slicedToArray(files, 1),\n            file = _files[0];\n\n      this.setState({\n        file: file\n      }); // const fileReader = new FileReader();\n      // fileReader.onload = (e) => {\n      //     this.uploadInvoice(e.target.result);\n      // };\n      // fileReader.readAsDataURL(file);\n    };\n\n    this.uploadInvoice = invoiceFile => {\n      this.setState({\n        file: invoiceFile\n      });\n    };\n\n    this.addAlbums = () => {\n      const _this$state = this.state,\n            albums = _this$state.albums,\n            link = _this$state.link,\n            file = _this$state.file;\n      let data = new FormData();\n      data.append('data', file);\n      data.append('albums', albums);\n      data.append('link', link);\n      this.albumsService.save(data).then(data => {\n        this.atualizaLista();\n      }).catch(erro => {\n        if (erro != null && erro.response != null && erro.response.data != null) {\n          console.log(erro.response);\n          this.messages.show({\n            severity: 'error',\n            summary: 'Error Message',\n            detail: 'Validation failed'\n          }); // showMessageError(\"Erro de Login\",  erro.response.data.message)\n        }\n      });\n    };\n\n    this.atualizaLista = async () => {\n      await this.albumsService.getList().then(data => {\n        if (data.data.length > 0) {\n          let albums = data.data.map(el => {\n            return React.createElement(AlbumsTables, {\n              Albuns: el,\n              ChangePage: this.onPage,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 75\n              },\n              __self: this\n            });\n          });\n          this.setState({\n            albumsList: albums\n          });\n          this.getAlbumsList();\n        } else {\n          this.setState({\n            albumsList: []\n          });\n        }\n      }).catch(erro => {\n        if (erro != null && erro.response != null && erro.response.data != null) {\n          console.log(erro.response);\n          this.messages.show({\n            severity: 'error',\n            summary: 'Error Message',\n            detail: 'Validation failed'\n          });\n        }\n      });\n    };\n\n    this.deleteAlbum = async id => {\n      await this.albumsService.erase(id).then(data => {\n        this.atualizaLista();\n      }).catch(erro => {\n        if (erro != null && erro.response != null && erro.response.data != null) {\n          console.log(erro.response);\n          this.messages.show({\n            severity: 'error',\n            summary: 'Error Message',\n            detail: 'Validation failed'\n          });\n        }\n      });\n    };\n\n    this.state = {\n      albumsList: [],\n      file: null\n    };\n    this.albumsService = new AlbumsService();\n    this.onClick = this.onClick.bind(this); // this.onUpload = this.onUpload.bind(this);\n  }\n\n  onClick(name, position) {\n    let state = {\n      [`${name}`]: true\n    };\n\n    if (position) {\n      state = _objectSpread({}, state, {\n        position\n      });\n    }\n\n    this.setState(state);\n  }\n\n  componentDidMount() {\n    this.albumsService.getList().then(data => {\n      this.setState({\n        albumsList: data.data\n      });\n      this.getAlbumsList();\n    }).catch(erro => {\n      if (erro != null && erro.response != null && erro.response.data != null) {\n        console.log(erro.response);\n        this.messages.show({\n          severity: 'error',\n          summary: 'Error Message',\n          detail: 'Validation failed'\n        });\n      }\n    });\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, \"  \", React.createElement(Messages, {\n      ref: el => this.messages = el,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(Card, {\n      title: \"Posts\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"bs-component\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"p-col-12 p-md-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(FileUpload, {\n      name: \"imagem\",\n      accept: \"image/*\",\n      customUpload: true,\n      uploadHandler: this.invoiceUploadHandler,\n      mode: \"basic\",\n      auto: true,\n      chooseLabel: \"Upload image\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }))))))), React.createElement(Card, {\n      title: \"Lista de Albuns\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"bs-component\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(AlbumsTables, {\n      Albuns: this.state,\n      ChangePage: this.onPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }))))));\n  }\n\n}\nexport default withRouter(Albums);","map":{"version":3,"sources":["C:/Users/gugar/Documents/git/blog-frontend/src/pages/Albums/index.js"],"names":["React","AlbumsService","Link","withRouter","AlbumsTables","Button","Card","FileUpload","Messages","Message","Albums","Component","constructor","invoiceUploadHandler","files","file","setState","uploadInvoice","invoiceFile","addAlbums","state","albums","link","data","FormData","append","albumsService","save","then","atualizaLista","catch","erro","response","console","log","messages","show","severity","summary","detail","getList","length","map","el","onPage","albumsList","getAlbumsList","deleteAlbum","id","erase","onClick","bind","name","position","componentDidMount","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\n// import '../../styles/global.css'\r\nimport AlbumsService from '../../services/albumService'\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport AlbumsTables from './albumsTables'\r\n\r\n\r\nimport {Button} from 'primereact/button';\r\nimport {Card} from 'primereact/card';\r\nimport {FileUpload} from 'primereact/fileupload';\r\nimport {Messages} from 'primereact/messages';\r\nimport {Message} from 'primereact/message';\r\nexport class Albums extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            albumsList:[],\r\n            file:null\r\n        };\r\n        this.albumsService = new AlbumsService();\r\n        \r\n        this.onClick = this.onClick.bind(this);\r\n        // this.onUpload = this.onUpload.bind(this);\r\n    }\r\n    invoiceUploadHandler = ({files}) => {\r\n        const [file] = files;\r\n        this.setState({file:file});\r\n        // const fileReader = new FileReader();\r\n        // fileReader.onload = (e) => {\r\n        //     this.uploadInvoice(e.target.result);\r\n        // };\r\n        // fileReader.readAsDataURL(file);\r\n    };\r\n    uploadInvoice = (invoiceFile) => {\r\n        this.setState({file:invoiceFile});\r\n    };\r\n    onClick(name, position) {\r\n        let state = {\r\n            [`${name}`]: true\r\n        };\r\n\r\n        if (position) {\r\n            state = {\r\n                ...state,\r\n                position\r\n            }\r\n        }\r\n\r\n        this.setState(state);\r\n    }\r\n    addAlbums = () => {    \r\n        const { albums, link,file } = this.state;\r\n        let data = new FormData();\r\n        data.append('data', file);\r\n        data.append('albums', albums);\r\n        data.append('link', link);\r\n        this.albumsService.save(data).then(data => {\r\n            this.atualizaLista();\r\n        }).catch(erro => {\r\n            if(erro != null && erro.response != null && erro.response.data != null){\r\n                console.log(erro.response)\r\n                this.messages.show({ severity: 'error', summary: 'Error Message', detail: 'Validation failed' });\r\n                // showMessageError(\"Erro de Login\",  erro.response.data.message)\r\n            }\r\n        })\r\n        \r\n    }\r\n    atualizaLista = async () =>{\r\n        await this.albumsService.getList().then(data => {\r\n            if(data.data.length > 0){\r\n                 \r\n                let albums = data.data.map((el) => {\r\n                    return <AlbumsTables Albuns={el} ChangePage={this.onPage}></AlbumsTables>\r\n                }) \r\n                this.setState({albumsList: albums});\r\n                this.getAlbumsList();\r\n            }else{\r\n                this.setState({albumsList:[]});\r\n            }\r\n        }).catch(erro => {\r\n            if(erro != null && erro.response != null && erro.response.data != null){\r\n                console.log(erro.response)\r\n                this.messages.show({ severity: 'error', summary: 'Error Message', detail: 'Validation failed' });\r\n            }\r\n        })\r\n    }\r\n    componentDidMount() {\r\n        this.albumsService.getList().then(data => {\r\n            this.setState({albumsList: data.data});\r\n            this.getAlbumsList();\r\n        }).catch(erro => {\r\n            if(erro != null && erro.response != null && erro.response.data != null){\r\n                console.log(erro.response)\r\n                this.messages.show({ severity: 'error', summary: 'Error Message', detail: 'Validation failed' });\r\n            }\r\n        })\r\n    }\r\n    \r\n    deleteAlbum = async (id) => {\r\n        await this.albumsService.erase(id).then(data => {\r\n            this.atualizaLista();\r\n        }).catch(erro => {\r\n            if(erro != null && erro.response != null && erro.response.data != null){\r\n                console.log(erro.response)\r\n                this.messages.show({ severity: 'error', summary: 'Error Message', detail: 'Validation failed' });\r\n            }\r\n        })\r\n    }\r\n    \r\n    \r\n    render() {\r\n        return (\r\n            <>  <Messages ref={(el) => this.messages = el}></Messages>\r\n            <div  className=\"container\">\r\n                    <Card title=\"Posts\" >\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-6\">\r\n                                <div className=\"bs-component\">\r\n                                    <div className=\"p-col-12 p-md-4\">                                        \r\n                                        \r\n                                        <FileUpload name=\"imagem\"\r\n                                            accept=\"image/*\"\r\n                                            customUpload={true}\r\n                                            uploadHandler={this.invoiceUploadHandler}\r\n                                            mode=\"basic\"\r\n                                            auto={true}\r\n                                            chooseLabel=\"Upload image\"/>\r\n                                        <br></br>\r\n                                    </div>\r\n                                    \r\n                                    \r\n                                \r\n                                </div>\r\n                            </div>\r\n                            \r\n                        </div>\r\n                    </Card>\r\n                \r\n                    </div>\r\n            <Card title=\"Lista de Albuns\" >\r\n                    <br></br>\r\n                    <br></br>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12\">\r\n                            <div className=\"bs-component\">\r\n                               <AlbumsTables  Albuns={this.state} ChangePage={this.onPage}></AlbumsTables>  \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Card>\r\n                \r\n           </>\r\n        );\r\n    }\r\n}\r\nexport default withRouter(Albums);\r\n"]},"metadata":{},"sourceType":"module"}