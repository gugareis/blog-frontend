{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\gugar\\\\Documents\\\\git\\\\blog-frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:\\\\Users\\\\gugar\\\\Documents\\\\git\\\\blog-frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\gugar\\\\Documents\\\\git\\\\blog-frontend\\\\src\\\\pages\\\\Blog\\\\index.js\";\nimport React from 'react'; // import '../../styles/global.css'\n\nimport PostService from '../../services/postService';\nimport UserServide from '../../services/usuarioServices';\nimport commentsService from '../../services/commentsService';\nimport { Link, withRouter } from \"react-router-dom\";\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { Card } from 'primereact/card';\nimport { Button } from 'primereact/button';\nimport { InputText } from 'primereact/inputtext';\nimport { FileUpload } from 'primereact/fileupload';\nimport { Messages } from 'primereact/messages';\nimport { Message } from 'primereact/message';\nexport class Blog extends React.Component {\n  constructor() {\n    super();\n\n    this.invoiceUploadHandler = ({\n      files\n    }) => {\n      const _files = _slicedToArray(files, 1),\n            file = _files[0];\n\n      this.setState({\n        file: file\n      }); // const fileReader = new FileReader();\n      // fileReader.onload = (e) => {\n      //     this.uploadInvoice(e.target.result);\n      // };\n      // fileReader.readAsDataURL(file);\n    };\n\n    this.uploadInvoice = invoiceFile => {\n      this.setState({\n        file: invoiceFile\n      });\n    };\n\n    this.addPost = () => {\n      const _this$state = this.state,\n            post = _this$state.post,\n            link = _this$state.link,\n            file = _this$state.file;\n      let data = new FormData();\n      data.append('data', file);\n      data.append('post', post);\n      data.append('link', link);\n      this.postService.save(data).then(data => {\n        this.atualizaLista();\n      }).catch(erro => {\n        if (erro != null && erro.response != null && erro.response.data != null) {\n          console.log(erro.response);\n          this.messages.show({\n            severity: 'error',\n            summary: 'Error Message',\n            detail: 'Validation failed'\n          }); // showMessageError(\"Erro de Login\",  erro.response.data.message)\n        }\n      });\n    };\n\n    this.atualizaLista = () => {\n      this.postService.getList().then(data => {\n        if (data.data.length > 0) {\n          this.setState({\n            postsList: data.data\n          });\n          this.getPostList();\n        } else {\n          this.setState({\n            gridList: []\n          });\n        }\n      }).catch(erro => {\n        if (erro != null && erro.response != null && erro.response.data != null) {\n          console.log(erro.response);\n          this.messages.show({\n            severity: 'error',\n            summary: 'Error Message',\n            detail: 'Validation failed'\n          });\n        }\n      });\n    };\n\n    this.deleteComment = async id => {\n      await this.commentsServices.erase(id).then(data => {\n        this.atualizaLista();\n      }).catch(erro => {\n        if (erro != null && erro.response != null && erro.response.data != null) {\n          console.log(erro.response);\n          this.messages.show({\n            severity: 'error',\n            summary: 'Error Message',\n            detail: 'Validation failed'\n          });\n        }\n      });\n    };\n\n    this.deletePost = async id => {\n      await this.postService.erase(id).then(data => {\n        this.atualizaLista();\n      }).catch(erro => {\n        if (erro != null && erro.response != null && erro.response.data != null) {\n          console.log(erro.response);\n          this.messages.show({\n            severity: 'error',\n            summary: 'Error Message',\n            detail: 'Validation failed'\n          });\n        }\n      });\n    };\n\n    this.getPostList = () => {\n      const result = this.state.postsList.map((item, i) => {\n        let list = [];\n        const data = this.commentsServices.getListByPostId(parseInt(item.id)).then(data => {\n          list = data.data;\n          let componetsGet = list.map(el => {\n            if (el.userId === item.userId) {\n              return React.createElement(\"p\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 146\n                },\n                __self: this\n              }, el.comments, React.createElement(Button, {\n                label: \"Excluir\",\n                onClick: () => this.deleteComment(el.id),\n                icon: \"pi pi-times\",\n                className: \"p-button-secondary\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 147\n                },\n                __self: this\n              }));\n            } else {\n              return React.createElement(\"p\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 150\n                },\n                __self: this\n              }, el.comments);\n            }\n          });\n          this.setState({\n            componets: componetsGet\n          });\n        }).catch(erro => {\n          if (erro != null && erro.response != null && erro.response.data != null) {\n            console.log(erro.response);\n            this.messages.show({\n              severity: 'error',\n              summary: 'Error Message',\n              detail: 'Erro ao buscar commentÃ¡rios'\n            });\n          }\n        });\n\n        if (this.state.usuario.id === item.userId) {\n          return React.createElement(Card, {\n            footer: React.createElement(\"span\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 161\n              },\n              __self: this\n            }, React.createElement(\"span\", {\n              className: \"p-float-label\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 162\n              },\n              __self: this\n            }, React.createElement(InputText, {\n              id: \"Comment\",\n              value: this.state.comment,\n              onChange: e => this.setState({\n                comment: e.target.value\n              }),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 163\n              },\n              __self: this\n            })), React.createElement(Button, {\n              label: \"Adicionar comment\\xE1rio\",\n              onClick: () => this.addComment(item.id, this.state.comment),\n              icon: \"pi pi-check\",\n              style: {\n                marginRight: '.25em'\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 165\n              },\n              __self: this\n            }), React.createElement(Button, {\n              label: \"Excluir\",\n              onClick: () => this.deletePost(item.id),\n              icon: \"pi pi-times\",\n              className: \"p-button-secondary\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 166\n              },\n              __self: this\n            })),\n            header: React.createElement(\"img\", {\n              alt: \"Card\",\n              src: `data:image/jpeg;base64,${item.data}`,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 167\n              },\n              __self: this\n            }),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 161\n            },\n            __self: this\n          }, React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 169\n            },\n            __self: this\n          }), React.createElement(\"h5\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 170\n            },\n            __self: this\n          }, \"Post\"), React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 171\n            },\n            __self: this\n          }, item.post), React.createElement(\"h5\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 174\n            },\n            __self: this\n          }, \"Link\"), React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 175\n            },\n            __self: this\n          }, item.link), React.createElement(\"h5\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 178\n            },\n            __self: this\n          }, \"Coment\\xE1rios\"), this.state.componets);\n        } else {\n          return React.createElement(Card, {\n            footer: React.createElement(\"span\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 183\n              },\n              __self: this\n            }, React.createElement(\"span\", {\n              className: \"p-float-label\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 184\n              },\n              __self: this\n            }, React.createElement(InputText, {\n              id: \"Comment\",\n              value: this.state.comment,\n              onChange: e => this.setState({\n                comment: e.target.value\n              }),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 185\n              },\n              __self: this\n            })), React.createElement(Button, {\n              label: \"Adicionar comment\\xE1rio\",\n              onClick: () => this.addComment(item.id, this.state.comment),\n              icon: \"pi pi-check\",\n              style: {\n                marginRight: '.25em'\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 187\n              },\n              __self: this\n            })),\n            header: React.createElement(\"img\", {\n              alt: \"Card\",\n              src: `data:image/jpeg;base64,${item.data}`,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 188\n              },\n              __self: this\n            }),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 183\n            },\n            __self: this\n          }, React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 190\n            },\n            __self: this\n          }), React.createElement(\"h5\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 191\n            },\n            __self: this\n          }, \"Post\"), React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 192\n            },\n            __self: this\n          }, item.post), React.createElement(\"h5\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 195\n            },\n            __self: this\n          }, \"Link\"), React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 196\n            },\n            __self: this\n          }, item.link), React.createElement(\"h5\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 199\n            },\n            __self: this\n          }, \"Coment\\xE1rios\"), this.state.componets);\n        }\n      });\n      this.setState({\n        gridList: result\n      });\n    };\n\n    this.addComment = (id, comment) => {\n      this.commentsServices.save({\n        \"postId\": id,\n        \"comment\": comment\n      }).then(data => {\n        this.atualizaLista();\n      }).catch(erro => {\n        if (erro != null && erro.response != null && erro.response.data != null) {\n          console.log(erro.response);\n          this.messages.show({\n            severity: 'error',\n            summary: 'Error Message',\n            detail: 'Erro ao buscar commentÃ¡rios'\n          });\n        }\n      });\n    };\n\n    this.getcommenttList = item => {};\n\n    this.state = {\n      postsList: [],\n      commentsList: [],\n      post: \"\",\n      link: \"\",\n      usuario: [],\n      commentTupla: [],\n      gridList: null,\n      file: null\n    };\n    this.postService = new PostService();\n    this.usuarioService = new usuarioService();\n    this.commentsServices = new commentsService();\n    this.onClick = this.onClick.bind(this); // this.onUpload = this.onUpload.bind(this);\n  }\n\n  onClick(name, position) {\n    let state = {\n      [`${name}`]: true\n    };\n\n    if (position) {\n      state = _objectSpread({}, state, {\n        position\n      });\n    }\n\n    this.setState(state);\n  }\n\n  componentDidMount() {\n    this.postService.getList().then(data => {\n      this.setState({\n        postsList: data.data\n      });\n      this.getPostList();\n    }).catch(erro => {\n      if (erro != null && erro.response != null && erro.response.data != null) {\n        console.log(erro.response);\n        this.messages.show({\n          severity: 'error',\n          summary: 'Error Message',\n          detail: 'Validation failed'\n        });\n      }\n    });\n    this.usuarioService.getUser().then(data => {\n      this.setState({\n        usuario: data.data\n      });\n    }).catch(erro => {\n      if (erro != null && erro.response != null && erro.response.data != null) {\n        console.log(erro.response);\n        this.messages.show({\n          severity: 'error',\n          summary: 'Error Message',\n          detail: 'Validation failed'\n        });\n      }\n    });\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, \"  \", React.createElement(Messages, {\n      ref: el => this.messages = el,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, React.createElement(Card, {\n      title: \"Posts\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"bs-component\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"p-col-12 p-md-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"inputPost\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, \"Post \"), React.createElement(\"span\", {\n      className: \"p-float-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, React.createElement(InputText, {\n      id: \"post\",\n      value: this.state.post,\n      onChange: e => this.setState({\n        post: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"inputPost\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, \"Link \"), React.createElement(\"span\", {\n      className: \"p-float-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, React.createElement(InputText, {\n      id: \"link\",\n      value: this.state.link,\n      onChange: e => this.setState({\n        link: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }), React.createElement(FileUpload, {\n      name: \"imagem\",\n      accept: \"image/*\",\n      customUpload: true,\n      uploadHandler: this.invoiceUploadHandler,\n      mode: \"basic\",\n      auto: true,\n      chooseLabel: \"Upload image\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"p-col-12 p-md-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.addPost,\n      label: \"Adicionar post\",\n      icon: \"pi pi-plus\",\n      iconPos: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }))))))), this.state.gridList));\n  }\n\n}\nexport default withRouter(Blog);","map":{"version":3,"sources":["C:/Users/gugar/Documents/git/blog-frontend/src/pages/Blog/index.js"],"names":["React","PostService","UserServide","commentsService","Link","withRouter","DataTable","Column","Card","Button","InputText","FileUpload","Messages","Message","Blog","Component","constructor","invoiceUploadHandler","files","file","setState","uploadInvoice","invoiceFile","addPost","state","post","link","data","FormData","append","postService","save","then","atualizaLista","catch","erro","response","console","log","messages","show","severity","summary","detail","getList","length","postsList","getPostList","gridList","deleteComment","id","commentsServices","erase","deletePost","result","map","item","i","list","getListByPostId","parseInt","componetsGet","el","userId","comments","componets","usuario","comment","e","target","value","addComment","marginRight","getcommenttList","commentsList","commentTupla","usuarioService","onClick","bind","name","position","componentDidMount","getUser","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\n// import '../../styles/global.css'\r\nimport PostService from '../../services/postService'\r\nimport UserServide from '../../services/usuarioServices'\r\nimport commentsService from '../../services/commentsService'\r\nimport { Link, withRouter } from \"react-router-dom\";\r\n\r\n\r\nimport {DataTable} from 'primereact/datatable';\r\nimport {Column} from 'primereact/column';\r\nimport {Card} from 'primereact/card';\r\nimport {Button} from 'primereact/button';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {FileUpload} from 'primereact/fileupload';\r\nimport {Messages} from 'primereact/messages';\r\nimport {Message} from 'primereact/message';\r\nexport class Blog extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            postsList:[],\r\n            commentsList:[],\r\n            post:\"\",\r\n            link:\"\",\r\n            usuario: [],\r\n            commentTupla:[],\r\n            gridList:null,\r\n            file:null\r\n        };\r\n        this.postService = new PostService();\r\n        this.usuarioService = new usuarioService();\r\n        this.commentsServices = new commentsService();\r\n        \r\n        this.onClick = this.onClick.bind(this);\r\n        // this.onUpload = this.onUpload.bind(this);\r\n    }\r\n    invoiceUploadHandler = ({files}) => {\r\n        const [file] = files;\r\n        this.setState({file:file});\r\n        // const fileReader = new FileReader();\r\n        // fileReader.onload = (e) => {\r\n        //     this.uploadInvoice(e.target.result);\r\n        // };\r\n        // fileReader.readAsDataURL(file);\r\n    };\r\n    uploadInvoice = (invoiceFile) => {\r\n        \r\n    \r\n        this.setState({file:invoiceFile});\r\n    };\r\n    onClick(name, position) {\r\n        let state = {\r\n            [`${name}`]: true\r\n        };\r\n\r\n        if (position) {\r\n            state = {\r\n                ...state,\r\n                position\r\n            }\r\n        }\r\n\r\n        this.setState(state);\r\n    }\r\n    addPost = () => {    \r\n        const { post, link,file } = this.state;\r\n        let data = new FormData();\r\n        data.append('data', file);\r\n        data.append('post', post);\r\n        data.append('link', link);\r\n        this.postService.save(data).then(data => {\r\n            this.atualizaLista();\r\n        }).catch(erro => {\r\n            if(erro != null && erro.response != null && erro.response.data != null){\r\n                console.log(erro.response)\r\n                this.messages.show({ severity: 'error', summary: 'Error Message', detail: 'Validation failed' });\r\n                // showMessageError(\"Erro de Login\",  erro.response.data.message)\r\n            }\r\n        })\r\n    }\r\n    atualizaLista = () =>{\r\n        this.postService.getList().then(data => {\r\n            if(data.data.length > 0){\r\n                this.setState({postsList: data.data});\r\n                this.getPostList();\r\n            }else{\r\n                this.setState({gridList:[]});\r\n            }\r\n        }).catch(erro => {\r\n            if(erro != null && erro.response != null && erro.response.data != null){\r\n                console.log(erro.response)\r\n                this.messages.show({ severity: 'error', summary: 'Error Message', detail: 'Validation failed' });\r\n            }\r\n        })\r\n    }\r\n    componentDidMount() {\r\n        this.postService.getList().then(data => {\r\n            this.setState({postsList: data.data});\r\n            this.getPostList();\r\n        }).catch(erro => {\r\n            if(erro != null && erro.response != null && erro.response.data != null){\r\n                console.log(erro.response)\r\n                this.messages.show({ severity: 'error', summary: 'Error Message', detail: 'Validation failed' });\r\n            }\r\n        })\r\n        this.usuarioService.getUser().then(data => {\r\n            this.setState({usuario: data.data});\r\n        }).catch(erro => {\r\n            if(erro != null && erro.response != null && erro.response.data != null){\r\n                console.log(erro.response)\r\n                this.messages.show({ severity: 'error', summary: 'Error Message', detail: 'Validation failed' });\r\n            }\r\n        })\r\n    }\r\n    deleteComment = async (id) => {\r\n        await this.commentsServices.erase(id).then(data => {\r\n            this.atualizaLista();\r\n        }).catch(erro => {\r\n            if(erro != null && erro.response != null && erro.response.data != null){\r\n                console.log(erro.response)\r\n                this.messages.show({ severity: 'error', summary: 'Error Message', detail: 'Validation failed' });\r\n            }\r\n        })\r\n    }\r\n    \r\n    deletePost = async (id) => {\r\n        await this.postService.erase(id).then(data => {\r\n            this.atualizaLista();\r\n        }).catch(erro => {\r\n            if(erro != null && erro.response != null && erro.response.data != null){\r\n                console.log(erro.response)\r\n                this.messages.show({ severity: 'error', summary: 'Error Message', detail: 'Validation failed' });\r\n            }\r\n        })\r\n    }\r\n    getPostList =  () => {\r\n        const result = this.state.postsList.map((item, i) => {\r\n            let list = [];\r\n            \r\n            const data =  this.commentsServices.getListByPostId(parseInt(item.id)).then(data => {\r\n               list = data.data;\r\n               let componetsGet = list.map((el) => {\r\n                if(el.userId === item.userId){\r\n                    return <p>{el.comments}\r\n                            <Button label=\"Excluir\" onClick={() => this.deleteComment(el.id)} icon=\"pi pi-times\" className=\"p-button-secondary\"/>\r\n                        </p>\r\n                }else{\r\n                    return <p>{el.comments}</p>\r\n                }\r\n              }); \r\n              this.setState({componets:componetsGet});\r\n           }).catch(erro => {\r\n               if(erro != null && erro.response != null && erro.response.data != null){\r\n                   console.log(erro.response)\r\n                   this.messages.show({ severity: 'error', summary: 'Error Message', detail: 'Erro ao buscar commentÃ¡rios' });\r\n               }\r\n           })\r\n           if(this.state.usuario.id === item.userId){\r\n                return (<Card footer={<span>   \r\n                        <span className=\"p-float-label\">\r\n                            <InputText id=\"Comment\" value={this.state.comment} onChange={(e) => this.setState({comment: e.target.value})} />\r\n                        </span>\r\n                        <Button label=\"Adicionar commentÃ¡rio\" onClick={() => this.addComment(item.id,this.state.comment)} icon=\"pi pi-check\" style={{marginRight: '.25em'}}/>\r\n                        <Button label=\"Excluir\" onClick={() => this.deletePost(item.id)} icon=\"pi pi-times\" className=\"p-button-secondary\"/>\r\n                    </span>} header={<img alt=\"Card\" src={`data:image/jpeg;base64,${item.data}`}/>}>\r\n                    \r\n                    <br></br>\r\n                    <h5>Post</h5>\r\n                    <p>\r\n                        {item.post}\r\n                    </p>\r\n                    <h5>Link</h5>\r\n                    <p>\r\n                        {item.link}\r\n                    </p>\r\n                    <h5>ComentÃ¡rios</h5>\r\n                        {this.state.componets}\r\n                </Card>);\r\n\r\n           }else{\r\n                return (<Card footer={<span>   \r\n                            <span className=\"p-float-label\">\r\n                                <InputText id=\"Comment\" value={this.state.comment} onChange={(e) => this.setState({comment: e.target.value})} />\r\n                            </span>\r\n                            <Button label=\"Adicionar commentÃ¡rio\" onClick={() => this.addComment(item.id,this.state.comment)} icon=\"pi pi-check\" style={{marginRight: '.25em'}}/>\r\n                        </span>} header={<img alt=\"Card\" src={`data:image/jpeg;base64,${item.data}`}/>}>\r\n                    \r\n                    <br></br>\r\n                    <h5>Post</h5>\r\n                    <p>\r\n                        {item.post}\r\n                    </p>\r\n                    <h5>Link</h5>\r\n                    <p>\r\n                        {item.link}\r\n                    </p>\r\n                    <h5>ComentÃ¡rios</h5>\r\n                        {this.state.componets}\r\n                </Card>);\r\n           }\r\n        \r\n        });\r\n        this.setState({gridList:result});\r\n    }\r\n    addComment = (id,comment) =>{\r\n        this.commentsServices.save({\"postId\":id,\"comment\":comment}).then(data => {\r\n            this.atualizaLista();\r\n        }).catch(erro => {\r\n               if(erro != null && erro.response != null && erro.response.data != null){\r\n                   console.log(erro.response)\r\n                   this.messages.show({ severity: 'error', summary: 'Error Message', detail: 'Erro ao buscar commentÃ¡rios' });\r\n               }\r\n           })\r\n    }\r\n    getcommenttList =  (item) => {\r\n        \r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <>  <Messages ref={(el) => this.messages = el}></Messages>\r\n                <div  className=\"container\">\r\n                    <Card title=\"Posts\" >\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-6\">\r\n                                <div className=\"bs-component\">\r\n                                    <div className=\"p-col-12 p-md-4\">\r\n                                        \r\n                                        <label htmlFor=\"inputPost\">Post </label>\r\n                                        <span className=\"p-float-label\">\r\n                                            <InputText id=\"post\" value={this.state.post} onChange={(e) => this.setState({post: e.target.value})} />\r\n                                        </span>\r\n                                        <br></br>\r\n                                        <label htmlFor=\"inputPost\">Link </label>\r\n                                        <span className=\"p-float-label\">\r\n                                            <InputText id=\"link\" value={this.state.link} onChange={(e) => this.setState({link: e.target.value})} />\r\n                                        </span>\r\n                                        <br></br>\r\n                                        <FileUpload name=\"imagem\"\r\n                                            accept=\"image/*\"\r\n                                            customUpload={true}\r\n                                            uploadHandler={this.invoiceUploadHandler}\r\n                                            mode=\"basic\"\r\n                                            auto={true}\r\n                                            chooseLabel=\"Upload image\"/>\r\n                                        <br></br>\r\n                                        <div className=\"p-col-12 p-md-4\">\r\n                                            \r\n                                            <Button  onClick={this.addPost} label='Adicionar post' icon=\"pi pi-plus\" iconPos=\"right\"></Button>\r\n                                        </div>\r\n                                    </div>\r\n                                    \r\n                                    \r\n                                \r\n                                </div>\r\n                            </div>\r\n                            \r\n                        </div>\r\n                    </Card>\r\n                    {this.state.gridList}\r\n                \r\n                </div>\r\n           </>\r\n        );\r\n    }\r\n}\r\nexport default withRouter(Blog);\r\n"]},"metadata":{},"sourceType":"module"}